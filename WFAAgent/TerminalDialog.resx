<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Lv9yzC//e8xA/4fMVf+9zLL/zc3NXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMzMzDfMxB/3HM
        L/+jzIf/kMxk/3LML/9xzC7/ccwu/3HMLv9xzC7/cswv/3LML/90zDL/yMrH48vLy2ytzJb/m8x4/6jM
        jf+zzKH/v822/snMx+fMzMzDzc3NoszMzH3GxsYSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAM3N
        zaKHzFX/p8yL/83NzanLy8uouM2p/o/MY/90zDT/ccwu/3HMLv9xzC7/ccwu/3HMLv+9zLL+zs7OKszM
        zIPMzMxqy8vLSczMzCjb29sHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAzc3Nf73Msv/MzMymqqqqAwAAAADLy8s2zMzMlcjLxuiyzJ//qMyN/57MfP+bzHj/pMyG/8TM
        vfvOzs4aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADGxsYSy8vLWb+/vwQAAAAAAAAAAAAAAAAAAAAA////AsrKyivNzc1Izc3NYM3N
        zWbMzMxVzs7OHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///4H///+B//+AAD//AAAf4AAADAAAAAwAAAAMAHgAHgDwAB8A8AAOAP
        AADgDwABwA+AAcCfgAPA//gDwf/4A8H//4PB//8D4f/5A/D/8APwB/AH8APwB/AD8A/wB/AH8AHgA/gA
        AAP4AAAD+AAAf/hAD//48B////////////8=
</value>
  </data>
</root>